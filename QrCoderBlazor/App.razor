@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.WebAssembly.Http
@using Microsoft.JSInterop
@using QrCoderBlazor
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using QRCoder;

<div>
    <table style="border: 2px solid rgb(140 140 140);">
        <tbody>
            <tr>
                <th scope="row">ECC</th>
                <td>
                    <InputSelect @bind-Value="ecc">
                        <option value="L">L</option>
                        <option value="M">M</option>
                        <option value="Q">Q</option>
                        <option value="H">H</option>
                    </InputSelect>
                </td>
            </tr>
            <tr>
                <th scope="row">Pixel size</th>
                <td><input type="number" @bind-value="pixelsPerModule" min="1" /></td>
            </tr>
            <tr>
                <th scope="row">Icon size percentage</th>
                <td><input type="number" @bind-value="iconSizePercent" min="1" max="100" /></td>
            </tr>
            <tr>
                <th scope="row">Foreground Color</th>
                <td><input type="color" @bind-value="foregroundColor" /></td>
            </tr>
            <tr>
                <th scope="row">Background Color</th>
                <td><input type="color" @bind-value="backgroundColor" /></td>
            </tr>
            <tr>
                <th scope="row">Upload Logo</th>
                <td><InputFile OnChange="ShowPreview" /></td>
            </tr>
            <tr>
                <th scope="row">Quiet zones</th>
                <td><InputCheckbox @bind-Value="quietZones" /></td>
            </tr>
            <tr>
                <th scope="row">Fill logo background</th>
                <td><InputCheckbox @bind-Value="fillLogoBackground" /></td>
            </tr>
            <tr>
                <th scope="row">QR Content</th>
                <td><input type="text" @bind-value="qrCodeInput" /></td>
            </tr>
        </tbody>
    </table>

    <button @onclick="Submit">Generate</button>

    <div style="max-width: 600px">
        @svgText
    </div>
</div>

@code {
    private byte[] selectedFile = [];

    private string ecc = "M";
    private string pixelsPerModule = "24";
    private string iconSizePercent = "15";
    private string foregroundColor = "#000000";
    private string backgroundColor = "#FFFFFF";
    private bool quietZones = true;
    private bool fillLogoBackground = true;

    private string? qrCodeInput;
    private MarkupString svgText;

    private async void ShowPreview(InputFileChangeEventArgs e)
    {
        using var stream = e.File.OpenReadStream();
        using var ms = new MemoryStream();
        await stream.CopyToAsync(ms);

        selectedFile = ms.ToArray();
    }

    private void Submit()
    {
        if (string.IsNullOrWhiteSpace(qrCodeInput))
            return;

        SvgQRCode.SvgLogo? logo = null;

        if (selectedFile.Length > 0)
        {
            if (!int.TryParse(iconSizePercent, out var iconSize))
                iconSize = 15;

            logo = new SvgQRCode.SvgLogo(selectedFile, iconSize, fillLogoBackground);
        }

        var qrCodeData = QRCoder.QRCodeGenerator.GenerateQrCode(qrCodeInput, Enum.Parse<QRCoder.QRCodeGenerator.ECCLevel>(ecc));
        var svg = new QRCoder.SvgQRCode(qrCodeData);

        if (!int.TryParse(pixelsPerModule, out var pixels))
            pixels = 24;

        Console.WriteLine("quiet: " + quietZones);
        svgText = new(svg.GetGraphic(pixels, foregroundColor, backgroundColor, quietZones, SvgQRCode.SizingMode.ViewBoxAttribute, logo));
    }
}