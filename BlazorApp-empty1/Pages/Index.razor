@using QRCoder;
@inject IJSRuntime JS
@page "/"


<script>
        window.previewImage = (inputElem, imgElem) => {
        const url = URL.createObjectURL(inputElem.files[0]);
        imgElem.addEventListener('load', () => URL.revokeObjectURL(url), { once: true });
        imgElem.src = url;
        }
</script>
<div>
    <label>
        Upload Logo
        <InputFile @ref="inputFile" OnChange="ShowPreview" />

    </label>
    <img style="max-width:200px;max-height:200px" @ref="previewImageElem" />
    <input type="text" @ref="textInput" @bind="value" />
    <button @onclick="Submit">Generate</button>

    <img style="max-width:400px;max-height:400px" src="@qr" />
    <div>
        @svgText
    </div>
</div>



@code   {
    private InputFile? inputFile;
    private ElementReference previewImageElem;
    private ElementReference textInput;
    private ElementReference qrImageElem;
    private string qr;
    private string? value;
    private byte[] filee = [];
    private MarkupString svgText;

    private async void ShowPreview(InputFileChangeEventArgs e)
    {
        using var stream = e.File.OpenReadStream();
        using var ms = new MemoryStream();
        await stream.CopyToAsync(ms);

        filee = ms.ToArray();
        Console.WriteLine("ms read: " + filee.Length);

        await JS.InvokeVoidAsync(
        "previewImage", inputFile!.Element, previewImageElem);
    }

    private void Submit()
    {
        svgText = new MarkupString("<svg width=\"400\" height=\"180\">\r\n  <rect x=\"50\" y=\"20\" rx=\"20\" ry=\"20\" width=\"150\" height=\"150\"\r\n  style=\"fill:red;stroke:black;stroke-width:5;opacity:0.5\" />\r\n</svg>");

        if (string.IsNullOrWhiteSpace(value))
            return;

        var qrCodeData = QRCoder.QRCodeGenerator.GenerateQrCode(value, QRCoder.QRCodeGenerator.ECCLevel.M);
        if (filee.Length > 0)
        {
            var svg = new QRCoder.SvgQRCode(qrCodeData);
            var ssvg = svg.GetGraphic(24, "#000000", "#FFFFFF", logo: new SvgQRCode.SvgLogo(filee));
            //Console.WriteLine("svg: " + ssvg);
            svgText = new(ssvg);
        }
        var bb = Convert.ToBase64String(new QRCoder.PngByteQRCode(qrCodeData).GetGraphic(24));
        Console.WriteLine(bb);
        qr = "data:image/png;base64, " + bb;
    }
}